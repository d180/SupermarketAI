name: Build & Push Docker (Docker Hub auto-version)

on:
  push:
    branches: [ "main" ]

permissions:
  contents: write          # to create & push git tags

concurrency:
  group: docker-release
  cancel-in-progress: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout (with tags)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Derive next version tag
        run: |
          git fetch --tags --force
          latest="$(git tag -l 'v[0-9]*' | sed 's/^v//' | sort -n | tail -n1)"
          [ -z "$latest" ] && latest=0
          echo "TAG=v$((latest+1))" >> $GITHUB_ENV

          USER_LC=$(echo "${{ secrets.DOCKERHUB_USERNAME }}" | tr '[:upper:]' '[:lower:]')
          echo "IMAGE=docker.io/$USER_LC/supermarketai" >> $GITHUB_ENV

          echo "Next version (candidate): ${TAG}"

      # Optional: pre-build sanity (helps show clear errors)
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - run: npm ci
      - run: npm run build

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & push image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE }}:${{ env.TAG }}
            ${{ env.IMAGE }}:latest
            ${{ env.IMAGE }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # âœ… Create git tag ONLY if everything above succeeded
      - name: Create & push git tag (post-success)
        if: ${{ success() }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git tag "$TAG"
          git push origin "$TAG"
